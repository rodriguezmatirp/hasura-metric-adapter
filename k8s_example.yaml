apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  selector:
    app: postgres
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hasura
    hasuraService: custom
  name: hasura
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasura
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: hasura
    spec:
      volumes:
      - name: logs
        emptyDir: {}
      shareProcessNamespace: true
      containers:
      - name: hasura-metric-adapter
        image: ....
        env:
        - name: LOG_FILE
          value: /tmp/log/stdout.log
        - name: LISTEN_ADDR
          value: 0.0.0.0:9999
        - name: HASURA_GRAPHQL_ADMIN_SECRET
          value: test
        volumeMounts:
        - name: logs
          mountPath: /tmp/log
        ports:
        - containerPort: 9999
          protocol: TCP
      - image: hasura/graphql-engine:v2.3.1
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: logs
          mountPath: /tmp/log
        command: [
          "/bin/sh", "-c", "rm -rf /tmp/log/stdout.log && mkfifo /tmp/log/stdout.log && /bin/graphql-engine serve | tee /tmp/log/stdout.log"
        ]
        name: hasura
        env:
        - name: HASURA_GRAPHQL_ADMIN_SECRET
          value: test
        - name: HASURA_GRAPHQL_DATABASE_URL
          value: postgres://postgres:postgres@postgres:5432/postgres
        ## enable the console served by server
        - name: HASURA_GRAPHQL_ENABLE_CONSOLE
          value: "true"
        - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES
          value: "startup, http-log, webhook-log, websocket-log, query-log"
        ## enable debugging mode. It is recommended to disable this in production
        - name: HASURA_GRAPHQL_DEV_MODE
          value: "true"
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hasura
  name: hasura
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  selector:
    app: hasura
  type: ClusterIP